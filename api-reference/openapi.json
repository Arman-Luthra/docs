{
  "openapi": "3.1.0",
  "info": {
    "title": "Skop PDF Scraper API",
    "description": "AI-powered document discovery and extraction from websites using natural language prompts",
    "version": "1.0.0",
    "contact": {
      "email": "support@skop.dev"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.skop.dev",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/health/": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the API is healthy and operational. This endpoint does not require authentication.",
        "operationId": "healthCheck",
        "security": [],
        "responses": {
          "200": {
            "description": "API health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scrape/": {
      "post": {
        "summary": "Create Scraping Job",
        "description": "Start a new document scraping job with a website URL and natural language prompt",
        "operationId": "createJob",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrapeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required - Insufficient credits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scrape/status/{job_id}": {
      "get": {
        "summary": "Check Job Status",
        "description": "Get the current status and progress of a scraping job",
        "operationId": "getJobStatus",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "description": "Unique job identifier",
            "schema": {
              "type": "string",
              "pattern": "^job_[a-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scrape/results/{job_id}": {
      "get": {
        "summary": "Get Job Results",
        "description": "Get the final results and extracted documents from a completed job",
        "operationId": "getJobResults",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "description": "Unique job identifier",
            "schema": {
              "type": "string",
              "pattern": "^job_[a-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job results with extracted documents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResultsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scrape/{job_id}": {
      "delete": {
        "summary": "Cancel Job",
        "description": "Cancel a running job. Only jobs with status 'pending' or 'in_progress' can be cancelled.",
        "operationId": "cancelJob",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "description": "Unique job identifier",
            "schema": {
              "type": "string",
              "pattern": "^job_[a-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot cancel job (already completed)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "API key in format 'sk-xxxxxxxxxxxxx' or 'sk_xxxxxxxxxxxxx'"
      }
    },
    "schemas": {
      "ScrapeRequest": {
        "type": "object",
        "required": ["website", "prompt"],
        "properties": {
          "website": {
            "type": "string",
            "format": "uri",
            "description": "Starting URL to scrape (must be valid HTTP/HTTPS URL)",
            "example": "https://example.com"
          },
          "prompt": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500,
            "description": "Description of documents to find (10-500 characters)",
            "example": "Find board meeting minutes from 2025"
          },
          "parameters": {
            "$ref": "#/components/schemas/ScrapeParameters"
          }
        }
      },
      "ScrapeParameters": {
        "type": "object",
        "properties": {
          "single_page": {
            "type": "boolean",
            "default": false,
            "description": "Only scrape the provided URL, don't navigate to other pages"
          },
          "timeout": {
            "type": "integer",
            "minimum": 60,
            "maximum": 3600,
            "default": 1800,
            "description": "Job timeout in seconds (60-3600)"
          },
          "confidence_threshold": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "default": 0.1,
            "description": "Minimum AI confidence score for document relevance (0.0-1.0)"
          },
          "file_type": {
            "type": "string",
            "enum": ["document"],
            "default": "document",
            "description": "Type of files to extract"
          },
          "max_file_size_mb": {
            "type": "integer",
            "minimum": 1,
            "maximum": 500,
            "default": 100,
            "description": "Maximum file size to download in MB (1-500)"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["healthy", "unhealthy"],
            "description": "Overall health status"
          },
          "service": {
            "type": "string",
            "example": "skop",
            "description": "Service name identifier"
          },
          "version": {
            "type": "string",
            "example": "1.0.0",
            "description": "Current API version"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of the health check"
          },
          "dependency_status": {
            "type": "string",
            "example": "operational",
            "description": "Status of external dependencies"
          }
        }
      },
      "JobCreateResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "pattern": "^job_[a-z0-9]+$",
            "example": "job_4fc79a89797e",
            "description": "Unique identifier for the created job"
          },
          "status": {
            "type": "string",
            "enum": ["pending"],
            "description": "Initial job status (always 'pending')"
          },
          "message": {
            "type": "string",
            "example": "Job created successfully and queued for processing",
            "description": "Success message"
          },
          "estimated_completion": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 estimated completion time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 job creation timestamp"
          }
        }
      },
      "JobStatusResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "pattern": "^job_[a-z0-9]+$",
            "description": "Job identifier"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "message": {
            "type": "string",
            "description": "Human-readable status message"
          },
          "progress": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "nullable": true,
            "description": "Progress percentage (0-100) when available"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 job creation timestamp"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "ISO 8601 job start timestamp"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "ISO 8601 job completion timestamp"
          },
          "estimated_completion": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "ISO 8601 estimated completion time"
          },
          "current_agent": {
            "type": "string",
            "nullable": true,
            "description": "Currently active processing agent"
          },
          "agents_completed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of completed processing steps"
          },
          "total_pages_crawled": {
            "type": "integer",
            "description": "Number of pages processed"
          },
          "total_documents_found": {
            "type": "integer",
            "description": "Number of documents discovered"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the job is currently running"
          },
          "has_errors": {
            "type": "boolean",
            "description": "Whether any errors occurred"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobError"
            },
            "description": "List of error objects (if any)"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of warning messages (if any)"
          }
        }
      },
      "JobResultsResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "pattern": "^job_[a-z0-9]+$",
            "description": "Job identifier"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "message": {
            "type": "string",
            "description": "Summary message with document count"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtractedDocument"
            },
            "description": "Array of extracted document objects"
          },
          "metadata": {
            "$ref": "#/components/schemas/JobMetadata"
          },
          "total_documents_found": {
            "type": "integer",
            "description": "Total documents discovered"
          },
          "total_documents_downloaded": {
            "type": "integer",
            "description": "Successfully downloaded documents"
          },
          "total_pages_crawled": {
            "type": "integer",
            "description": "Pages processed during scraping"
          },
          "success_rate": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "description": "Success rate (0.0-1.0)"
          },
          "cost": {
            "type": "number",
            "description": "Total cost in USD for this job"
          },
          "total_runtime_seconds": {
            "type": "number",
            "description": "Job execution time in seconds"
          },
          "runtime_minutes": {
            "type": "number",
            "description": "Job execution time in minutes"
          },
          "has_errors": {
            "type": "boolean",
            "description": "Whether any errors occurred"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobError"
            },
            "description": "List of error objects (if any)"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of warning messages (if any)"
          }
        }
      },
      "JobCancelResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "pattern": "^job_[a-z0-9]+$",
            "description": "Job identifier"
          },
          "status": {
            "type": "string",
            "enum": ["cancelled"],
            "description": "New job status (cancelled)"
          },
          "message": {
            "type": "string",
            "example": "Job cancelled successfully",
            "description": "Confirmation message"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 cancellation timestamp"
          }
        }
      },
      "ExtractedDocument": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable document name"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Direct URL to the document file"
          },
          "source_page": {
            "type": "string",
            "format": "uri",
            "description": "Web page where document was found"
          },
          "document_type": {
            "type": "string",
            "description": "File type (pdf, doc, docx, txt, etc.)"
          },
          "confidence_score": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "description": "AI confidence score for relevance (0.0-1.0)"
          },
          "file_size_mb": {
            "type": "number",
            "description": "File size in megabytes"
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 extraction timestamp"
          }
        }
      },
      "JobMetadata": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "pattern": "^job_[a-z0-9]+$",
            "description": "Job identifier"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 job creation timestamp"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 job completion timestamp"
          },
          "original_website": {
            "type": "string",
            "format": "uri",
            "description": "Original website URL provided"
          },
          "original_prompt": {
            "type": "string",
            "description": "Original prompt provided"
          },
          "parameters": {
            "$ref": "#/components/schemas/ScrapeParameters"
          }
        }
      },
      "JobError": {
        "type": "object",
        "properties": {
          "error_id": {
            "type": "string",
            "description": "Unique error identifier"
          },
          "agent_name": {
            "type": "string",
            "description": "Name of the agent that encountered the error"
          },
          "error_type": {
            "type": "string",
            "description": "Category of error"
          },
          "error_message": {
            "type": "string",
            "description": "Human-readable error description"
          },
          "page_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL where error occurred (if applicable)"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 error timestamp"
          },
          "is_recoverable": {
            "type": "boolean",
            "description": "Whether the error could potentially be recovered from"
          }
        }
      },
      "JobStatus": {
        "type": "string",
        "enum": ["pending", "in_progress", "completed", "failed", "cancelled"],
        "description": "Current status of the job"
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": true,
            "description": "Indicates this is an error response"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "path": {
            "type": "string",
            "description": "API path that generated the error"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 error timestamp"
          }
        }
      }
    }
  }
}